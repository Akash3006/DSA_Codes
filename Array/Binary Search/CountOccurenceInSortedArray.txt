//Time Complexity - O(2logn)

int occurence(vector<int> arr,int n ,int k, bool first)
{
    int low,high,mid,index;
    low = 0,high = n-1,index = -1;
    while(low<=high)
    {
        mid = low + (high - low)/2;

        if(arr[mid] == k)
            {
                index = mid;

                if(!first)
                    low = mid + 1;
                else
                    high = mid -1;

            }
        else if( arr[mid] > k)
            high = mid -1;
        else 
            low = mid +1;
    }

    return index;
}

int count(vector<int>& arr, int n, int x) {
	// Write Your Code Here
	int first,last;
	first = occurence(arr,n,x,true);

	if(first == -1)
		return 0;
	
	last = occurence(arr,n,x,false);

	return last - first +1; 
}